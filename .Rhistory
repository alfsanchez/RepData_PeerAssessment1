Dataset <- read.table("C:/Coursera/hw1_data.csv", header=TRUE, sep=",")
Dataset <- read.table("C:/Coursera/Quiz Files/hw1_data.csv", header=TRUE, sep=",")
dataset
Dataset <- read.table("C:/Coursera/Quiz Files/hw1_data.csv", header=TRUE, sep=",")
Data2row <- read.table("C:/Coursera/Quiz Files/hw1_data.csv", header=TRUE, sep=",", nrows=2)
print(Data2row)
Data2row
dataset
print(dataset)
Dataall <- read.table("C:/Coursera/Quiz Files/hw1_data.csv", header=TRUE, sep=",")
Data2row <- read.table("C:/Coursera/Quiz Files/hw1_data.csv", header=TRUE, sep=",", nrows=2)
print(Data2row)
Data2row
Dataall
Datalast2row <- read.table("C:/Coursera/Quiz Files/hw1_data.csv", header=TRUE, sep=",", skip=151)
Datalast2row
$ozone[47]
ozone[47]
Dataall[[1]][[47]]
OzoneCol <- Dataall[,1]
OzoneCol
OzoneColClean <- complete.cases(OzoneCol)
OzoneColClean
OzoneColClean[!FALSE]
x[OzoneColClean]
OzoneCol[OzoneColClean]
OzoneCol[!OzoneColClean]
mean(OzoneCol[OzoneColClean])
mean(OzoneCol[OzoneColClean])
Dataall1 <- Dataall[ozone>31]
Dataall1 <- Dataall["ozone">31]
Dataall1
Dataall[[ozone]]
Dataall1 <- Dataall[[1:153]][[1]]>31
Dataall[,1]
Dataall1 <- Dataall[,1]>31
Dataall1
OzoneCol[!OzoneColClean]
Dataall2[Dataall1]
Dataall[Dataall1]
Dataall1
Dataall1 <- Dataall[,1]>31
Dataall1
Dataall[Dataall1]
Dataall[Dataall[,1]>31]
Dataall[Dataall[,1]>31,]
Dataall[Dataall[,1]>31,]
Dataall1 <- Dataall[Dataall[,1]>31,]
Dataall1 <- Dataall[Dataall[,1]>31,]
Dataall1
Dataall2 <- Dataall1[Dataall1[,4]>90,]
Dataall2
Dataall2Clean <- complete.cases(Dataall2)
Dataall2[Dataall2Clean]
Dataall2Clean <- complete.cases(Dataall2)
Dataall2Clean
Dataall3 <- Dataall2[,2]
Dataall3
Dataall3Clean <- complete.cases(Dataall3)
Dataall3[Dataall3Clean]
mean(Dataall3[Dataall3Clean])
Dataall1 <- Dataall[Dataall[,5]==6,]
Dataall1 <- Dataall[Dataall[,5]==6,]
Dataall3 <- Dataall[,4]
Dataall3Clean <- complete.cases(Dataall3)
Dataall3[Dataall3Clean]
mean(Dataall3[Dataall3Clean])
Dataall1 <- Dataall[Dataall[,5]==6,]
Dataall3 <- Dataall1[,4]
Dataall3Clean <- complete.cases(Dataall3)
Dataall3[Dataall3Clean]
mean(Dataall3[Dataall3Clean])
Dataall1 <- Dataall[Dataall[,5]==5,]
Dataall3 <- Dataall1[,1]
Dataall3Clean <- complete.cases(Dataall3)
Dataall3[Dataall3Clean]
max(Dataall3[Dataall3Clean])
x <- 1:4
y <- 2:3
x+y
x <- c(17,14,4,5,13,12,10)
x[x>=11] <-4
x
Data2row <- read.table("C:/Coursera/Quiz Files/hw1_data.csv", header=TRUE, sep=",", nrows=2)
print(Data2row)
Data2row
Datalast2row <- read.table("C:/Coursera/Quiz Files/hw1_data.csv", header=TRUE, sep=",", skip=151)
Datalast2row
Dataall[[1]][[47]]
OzoneCol <- Dataall[,1]
OzoneColClean <- complete.cases(OzoneCol)
OzoneCol[!OzoneColClean]
OzoneCol <- Dataall[,1]
OzoneColClean <- complete.cases(OzoneCol)
OzoneCol[!OzoneColClean]
mean(OzoneCol[OzoneColClean])
Dataall1 <- Dataall[Dataall[,1]>31,]
Dataall2 <- Dataall1[Dataall1[,4]>90,]
Dataall3 <- Dataall2[,2]
Dataall3Clean <- complete.cases(Dataall3)
Dataall3[Dataall3Clean]
mean(Dataall3[Dataall3Clean])
Dataall1 <- Dataall[Dataall[,5]==6,]
Dataall3 <- Dataall1[,4]
Dataall3Clean <- complete.cases(Dataall3)
Dataall3[Dataall3Clean]
mean(Dataall3[Dataall3Clean])
Dataall1 <- Dataall[Dataall[,5]==5,]
Dataall3 <- Dataall1[,1]
Dataall3Clean <- complete.cases(Dataall3)
Dataall3[Dataall3Clean]
max(Dataall3[Dataall3Clean])
q()
library("bitops", lib.loc="~/R/win-library/3.1")
library("digest", lib.loc="~/R/win-library/3.1")
library("gtools", lib.loc="~/R/win-library/3.1")
library("httr", lib.loc="~/R/win-library/3.1")
library("jsonlite", lib.loc="~/R/win-library/3.1")
library("manipulate", lib.loc="~/R/win-library/3.1")
library("RCurl", lib.loc="~/R/win-library/3.1")
library("rJava", lib.loc="~/R/win-library/3.1")
library("rstudio", lib.loc="~/R/win-library/3.1")
library("stringr", lib.loc="~/R/win-library/3.1")
library("swirl", lib.loc="~/R/win-library/3.1")
library("testthat", lib.loc="~/R/win-library/3.1")
library("xlsx", lib.loc="~/R/win-library/3.1")
library("yaml", lib.loc="~/R/win-library/3.1")
library("boot", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("class", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("cluster", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("codetools", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("compiler", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("datasets", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("foreign", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("graphics", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("grid", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("grDevices", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("MASS", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("Matrix", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("methods", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("mgcv", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("nlme", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("nnet", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("parallel", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("rpart", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("spatial", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("splines", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("stats", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("stats4", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("survival", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("tcltk", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("tools", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("translations", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("utils", lib.loc="C:/Program Files/R/R-3.1.1/library")
library(data.table)
install.packages(data.table)
install.packages("data.table")
install.packages("data.table")
library("plyr", lib.loc="~/R/win-library/3.1")
library("data.table", lib.loc="~/R/win-library/3.1")
library("Rcpp", lib.loc="~/R/win-library/3.1")
DF <- fread("C:/Coursera/getdata_data_ss06pid.csv", sep="auto", sep2="auto", nrows=-1L, header="auto", na.strings="NA",
DF <- fread("C:/Coursera/getdata_data_ss06pid.csv", sep="auto", sep2="auto", nrows=-1L, header="auto", na.strings="NA",
stringsAsFactors=FALSE, verbose=FALSE, autostart=30L, skip=-1L, select=NULL,
colClasses=NULL, integer64=getOption("datatable.integer64"))
head(df)
DF <- fread("C:/Coursera/getdata_data_ss06pid.csv", sep=",")
head(DF)
sapply(split(DT$pwgtp15,DT$SEX),mean)
DT <- fread("C:/Coursera/getdata_data_ss06pid.csv", sep=",")
head(DT)
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
tapply(DT$pwgtp15,DT$SEX,mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT$pwgtp15,by=DT$SEX)
DT[,mean(pwgtp15),by=SEX]
mean(DT$pwgtp15,by=DT$SEX)
DT[,mean(pwgtp15),by=SEX]
mean(DT$pwgtp15,by=DT$SEX)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
tapply(DT$pwgtp15,DT$SEX,mean)
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsasFactors = FALSE)
mydf <- read.csv(file = path2csv, stringsasFactors = FALSE)
path2csv
getwd()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim()
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:2-
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size-1000)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
tbl_df(mydf)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarize(by_package,ave_size=mean(size))
summarize(by_package,mean(size))
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts,desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, count > 465)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique,desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
swirl()
install.packages("tidyr")
install.packages("tidyr")
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
sex
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, - grade)
res
?separate
separate(res,sex_class,into=c("sex", "class"),sep="_")
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread
submit()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed,status=="passed")
passed <- mutate(passed,status="passed")
failed <- mutate(failed,status="failed")
rbind_list(passed,failed)
sat
submit()
?separate
?contains
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment <- now()
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms("2014-08-23 17:23:02")
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update()
this_moment <- update(this_moment)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
nyc <- now(UTC)
nyc <- now(EST)
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34, seconds = 0)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008",tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
setwd(C:/Coursera/Reproducible Research)
setwd("C:/Coursera/Reproducible Research")
setwd("C:/Coursera/Reproducible Research")
?knit2html
setwd("C:\Users\Alf Sanchez\datasciencecoursera\RepData_PeerAssessment1")
setwd("C:/Users/Alf Sanchez/datasciencecoursera/RepData_PeerAssessment1")
knit2html("PA1_template.Rmd")
library("knitr", lib.loc="~/R/win-library/3.1")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
